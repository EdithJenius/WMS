// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Product {
  id          String   @id @default(cuid())
  name        String
  code        String   @unique // 商品编号
  series      String   // 系列
  size        String?  // 尺寸
  style       String?  // 款式
  hiddenRatio Float?   // 隐藏款概率
  version     String?  // 版本
  image       String?  // 图片URL
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // 关联关系
  purchases   Purchase[]
  sales       Sale[]
  inventory   Inventory[]
}

model Purchase {
  id            String   @id @default(cuid())
  purchaseNo    String   @unique // 进货编号
  supplier      String   // 供应商
  manager       String   // 归属人
  purchaseTime  DateTime // 进货时间
  purchaseType  String   // 进货类型（整箱、散装、转单、渠道名等）
  quantity      Int      // 数量
  unitCost      Float    // 成本单价
  totalCost     Float    // 总成本
  batchNo       String?  // 批次编号
  status        String   @default("pending") // 状态（pending-待到货, arrived-已到货, listed-已上架）
  notes         String?  // 备注
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  // 关联关系
  productId     String
  product       Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Sale {
  id            String   @id @default(cuid())
  saleTime      DateTime // 出货时间
  sender        String   // 发货人
  platform      String   // 出货平台（拼多多、小红书、tiktok、抖音等）
  saleType      String   // 出货类型（售卖、赠送、换货、调拨）
  quantity      Int      // 数量
  salePrice     Float    // 售价
  customerName  String?  // 客户昵称或编号
  receiveMethod String  // 收货方式（快递、当面）
  expressCompany String? // 快递公司
  trackingNo    String?  // 快递单号
  shippingFee   Float?   // 运费
  profit        Float?   // 利润（自动计算）
  notes         String?  // 备注
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  // 关联关系
  productId     String
  product       Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Inventory {
  id          String   @id @default(cuid())
  productId   String
  quantity    Int      // 当前库存数量
  avgCost     Float    // 平均成本
  lastUpdated DateTime @default(now())
  
  // 关联关系
  product     Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  
  @@unique([productId])
}